
### 1. User Management Endpoints

#### 1.1. Create Account (Sign Up)
POST http://localhost:3000/users/ HTTP/1.1
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.2@example.com",
  "password": "SecurePass123"
  
}

#### 1.2. Login
POST http://localhost:3000/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "SecurePass123"
}
###find user
GET http://localhost:3000/users/9 HTTP/1.1
#### 1.3. Update User Profile
PUT http://localhost:3000/users/1 HTTP/1.1
Content-Type: application/json

{
  "name": "John Updated",
  "email": "john.updated@example.com",
  "phone": "987-654-3210"
}

### 2. Ticket Search & Booking Endpoints

#### 2.1. Search Buses/Trains
GET http://localhost:3000/tickets/search?from_location=New%20York&to_location=Boston&date=2024-09-20 HTTP/1.1

#### 2.2. Book Ticket
POST http://localhost:3000/tickets/book HTTP/1.1
Content-Type: application/json

{
  "user_id": 1,
  "bus_id": 1,
  "seat_id": 3,
  "price": 50.00,
  "payment_method": "Credit Card"
}

#### 2.3. Cancel Ticket
DELETE http://localhost:3000/tickets/:ticket_id/cancel HTTP/1.1

### 3. Payment Endpoints

#### 3.1. Make Payment for Ticket
POST http://localhost:3000/payments/ HTTP/1.1
Content-Type: application/json

{
  "ticket_id": 101,
  "payment_method": "Credit Card",
  "transaction_id": "abc123",
  "payment_status": "Success"
}

### 4. Seat Management

#### 4.1. View Seats for a Bus/Train
GET http://localhost:3000/seats/:bus_id HTTP/1.1

### 5. Admin Actions

#### 5.1. Add New Bus/Train
POST http://localhost:3000/admin/bus HTTP/1.1
Content-Type: application/json

{
  "bus_name": "NY-BOS Express",
  "type": "AC",
  "departure_time": "2024-09-20T08:00:00Z",
  "arrival_time": "2024-09-20T12:00:00Z",
  "from_location": "New York",
  "to_location": "Boston"
}

#### 5.2. Delete Bus/Train
DELETE http://localhost:3000/admin/bus/:bus_id HTTP/1.1

### 6. Additional Admin Actions

#### 6.1. Add Seat
POST http://localhost:3000/admin/seats/:bus_id HTTP/1.1
Content-Type: application/json

{
  "seat_number": "A1",
  "is_available": true
}

#### 6.2. Remove Seat
DELETE http://localhost:3000/admin/seats/:bus_id HTTP/1.1

### 7. Location Management

#### 7.1. Add Location
POST http://localhost:3000/admin/locations/add HTTP/1.1
Content-Type: application/json

[
    { "name": "Arpara" },
    { "name": "Atharo Mile" },
    { "name": "Awria" },
    { "name": "Baghachra" },
    { "name": "Bashgram" },
    { "name": "Benapole" },
    { "name": "Bhanga" },
    { "name": "Board Bazar" },
    { "name": "Charavita" },
    { "name": "Chowgacha" },
    { "name": "Chuknagar" },
    { "name": "Chutipur" },
    { "name": "Dhaka" },
    { "name": "Dhaka-Gabtoli" },
    { "name": "Faridpur" },
    { "name": "Gazipur" },
    { "name": "Godkhali" },
    { "name": "Jamtola" },
    { "name": "Jessore" },
    { "name": "Jhikorgacha" },
    { "name": "Kalia" },
    { "name": "Keshabpur" },
    { "name": "Kolarowa" },
    { "name": "Kolkata" },
    { "name": "Kopilmoni" },
    { "name": "Laxmipasha" },
    { "name": "Magura" },
    { "name": "Maleker Bari" },
    { "name": "Mawa" },
    { "name": "Monirampur" },
    { "name": "Nabinagar" },
    { "name": "Narail" },
    { "name": "Navaron" },
    { "name": "Paikgacha" },
    { "name": "Patkelghata" },
    { "name": "Purapara" },
    { "name": "Purulia" },
    { "name": "Satkhira" },
    { "name": "Savar" },
    { "name": "Shib bari" },
    { "name": "Shima Khali" },
    { "name": "Shyamnagor" },
    { "name": "Tala" },
    { "name": "Tongi" },
    { "name": "Tularampur" },
    { "name": "Ulashi" },
    { "name": "Vatiapara" }
]
####7.2 update location
PUT http://localhost:3000/admin/locations/1/update HTTP/1.1
Content-Type: application/json
{
  "name": "Abdullahpur"
}
#### 7.3. Remove location
DELETE http://localhost:3000/admin/locations/1/delete HTTP/1.1


#### 7.4 Search location by ID
GET http://localhost:3000/admin/locations/1 HTTP/1.1

#### 7.4 Get all locations
GET http://localhost:3000/admin/locations/ HTTP/1.1